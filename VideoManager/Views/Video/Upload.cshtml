@using Microsoft.AspNet.Identity
@model VideoManager.Models.Data.Video

@{
    ViewBag.Title = "Upload Service";
}

@section styles
{
    @Styles.Render("~/bundles/uploadcss")

<link href="~/Content/jquery.fileupload.css" rel="stylesheet" />
<link href="~/Content/jquery.fileupload-ui.css" rel="stylesheet" />
}

@section scripts
{
<script language="javascript" type="text/javascript" src="/Scripts/backstretch.js"></script>
<script src="~/JS/SendToServer.js"></script>
<script>
    $.backstretch("/Content/images/sunsetTree.jpg", {speed:550});
</script>
<script id="template-download">

</script>
    <!-- The Templates plugin is included to render the upload/download listings -->
<script src="~/Content/js/tmpl.min.js"></script>

<!-- The Load Image plugin is included for the preview images and image resizing functionality -->
<script src="~/Content/js/load-image.all.min.js"></script>
<!-- The Canvas to Blob plugin is included for image resizing functionality -->
<script src="~/Content/js/canvas-to-blob.min.js"></script>
<!-- blueimp Gallery script -->
<script src="~/Content/js/jquery.blueimp-gallery.min.js"></script>
<!-- The Iframe Transport is required for browsers without support for XHR file uploads -->
<script src="~/Content/js/jquery.iframe-transport.js"></script>
<!-- The basic File Upload plugin -->
<script src="~/Content/js/jquery.fileupload.js"></script>
<!-- The File Upload processing plugin -->
<script src="~/Content/js/jquery.fileupload-process.js"></script>
<!-- The File Upload image preview & resize plugin -->
<script src="~/Content/js/jquery.fileupload-image.js"></script>
    <!-- The File Upload audio preview plugin -->
<script src="~/Content/js/jquery.fileupload-audio.js"></script>
    <!-- The File Upload video preview plugin -->
<script src="~/Content/js/jquery.fileupload-video.js"></script>
<!-- The File Upload validation plugin -->
<script src="~/Content/js/jquery.fileupload-validate.js"></script>
    <!-- The File Upload user interface plugin -->
<script src="~/Content/js/jquery.fileupload-ui.js"></script>
    <!-- The main application script -->
<script>


$(function () {
    'use strict';

    
    var userName = "@(User.Identity.GetUserName().Replace(" ", ""))";
    // Initialize the jQuery File Upload widget:
    /*$('#fileupload').fileupload({
        // Uncomment the following to send cross-domain cookies:
        //xhrFields: {withCredentials: true},
        url: '/server/php/',
        //url: '/Backload/UploadHandler',
		maxChunkSize: 10000000,
		multipart: false,
		singleFileUploads: true,
		acceptFileTypes:  /\.mp4$/, 
    }).on('fileuploaddone', function (e, data) {
     
        var returnedFile = $("#files .name").text();
        $.each(data.result.files, function (index, item) {
            returnedFile = item.name;
        });
      */
    var totalFileSize = 0;
    $('#fileupload').fileupload({
   
        // Uncomment the following to send cross-domain cookies:
        //xhrFields: {withCredentials: true},
        //url: '/server/php/',
        //url: '/Backload/UploadHandler',
        url: '/video/chunkTest',
        maxChunkSize: 10000000,
        //multipart: false,
        singleFileUploads: true,
        acceptFileTypes: /^[a-zA-Z0-9_]+\.[mM][pP][4]$/,
        //data: totalFileSize,
        //acceptFileTypes:  /\.mp4$/,
    }).on('fileuploadchunksend', function (e, data) {
        //send chunk

    })
.on('fileuploadchunkdone', function (e, data) {
    //chunk done

})
.on('fileuploadchunkfail', function (e, data, status) {
    //chunk fail

}).on('fileuploaddone', function (e, data) {

    var returnedFile = userName+"_"+data.result.files;
    returnedFile = returnedFile.replace(/ /g, "").replace(/,/g,"");
        //alert(returnedFile);
      
      
        var videoIn = $("#videoIn").val();
                var videoEnd = $("#videoOut").val();
               
                $("#filePlaceHolder").removeClass("col-lg-6 col-lg-offset-3");
                $("#filePlaceHolder").addClass("col-lg-12");
                $("#files").html("<div class=\"jumbotron\" style=\"border-radius:10px;\"><h1>Funeral successfully uploaded</h1><br>Our servers are now going to process the video, the viewing page should be ready in a few hours</p></div>");
                $('.color-container').hide();
                if (videoIn == null || videoIn == "") {
                    videoIn = 0;
                }
                
                if (videoEnd == null || videoEnd == "") {
                    videoEnd = 0;
                }

        var serviceId = @(Model.Id);
    //sendInfoToServer(returnedFile, videoIn, videoEnd);
        videoEnd = videoEnd - videoIn;
                sendInfoToServer(returnedFile, videoIn, videoEnd,serviceId);

    }).on('fileuploadfail', function (e, data) {

        var videoIn = $("#videoIn").val();
        var videoEnd = $("#videoOut").val();
        var fileurl = $("#files .name").text();
        var userName = "@Model.Creator.UserName";
        var emailMessage = "File upload failed for "+userName;

        sendErrorToServer(emailMessage);

                $("video").remove();
                $(".color-container").remove();
                $(".btn").remove();
                $("#filePlaceHolder").removeClass("col-lg-6 col-lg-offset-3");
                $("#filePlaceHolder").addClass("col-lg-12");
                $("#files").html("<div class=\"jumbotron\" style=\"border-radius:10px;\"><h1 style=\"color: #b94a48;\">Funeral failed to upload!</h1><br>Ensure you are connected to the internet, refresh the page, and retry the upload. If you have tried this three times please contact support@@midweststreams.com</p></div>");
                $('.color-container').hide();
                $.each(data.files, function (index, file) {
                    var error = $('<span class="text-danger"/>').text('File upload failed.');
                    $(data.context.children()[index])
                        .append('<br>')
                        .append(error);
                });
            });

    // Enable iframe cross-domain access via redirect option:
    $('#fileupload').fileupload(
        'option',
        'redirect',
        window.location.href.replace(
            /\/[^\/]*$/,
            '/cors/result.html?%s'
        )
    );

        // Load existing files:
        $('#fileupload').addClass('fileupload-processing');
        $.ajax({
            // Uncomment the following to send cross-domain cookies:
            //xhrFields: {withCredentials: true},
            url: $('#fileupload').fileupload('option', 'url'),
            dataType: 'json',
            context: $('#fileupload')[0]
        }).always(function () {
            $(this).removeClass('fileupload-processing');
        }).done(function (result) {
            $(this).fileupload('option', 'done')
                .call(this, $.Event('done'), {result: result});
        });


});
    //TODO replace this code with something more elegant to show the cancel button. I just did this cause I couldn't figure out how to wire up an event on dynamically added elements
$('body').click(function () {
  
    $('.start').click(function(){
        $('.cancel').css("visibility","visible");
        
    })           
});
        $('#setIn').click(function () {

            
        
             
            if($("#manualCheckBox").is(':checked')==false)
            {
                var roundedTime = Math.round($('video').get(0).currentTime);
                $('#videoIn').val(roundedTime);
                $('#inSeconds').val(roundedTime).change();

            }
            else
            {
                var secsec = parseInt($('#inSeconds').val());
                var minutessec = parseInt($('#inMinutes').val()*60);
                var hoursec =  parseInt($('#inHours').val()*3600);
                var totalSeconds = secsec+minutessec+hoursec;
                if(isNaN(totalSeconds)==true)
                {
                    totalSeconds = 0;
                }
                $('#videoIn').val(totalSeconds);
              
            }
            if(parseInt($('#videoOut').val()) > parseInt($('#videoIn').val()))
            {
                $(".start").prop("disabled",false);
            }
            else
            {
                $(".start").prop("disabled",true);
            }

      
        });

        $('#setOut').click(function () {
    
            if($("#manualCheckBox").is(':checked')==false)
            {
                var roundedTime = Math.round($('video').get(0).currentTime);
                $('#videoOut').val(roundedTime);
                $('#outSeconds').val(roundedTime).change();
            }

            else
            {
                var secsec = parseInt($('#outSeconds').val());
                var minutessec = parseInt($('#outMinutes').val()*60);
                var hoursec =  parseInt($('#outHours').val()*3600);
              
                var totalSeconds = secsec+minutessec+hoursec;
                if(isNaN(totalSeconds)==true)
                {
                    totalSeconds = 0;
                }
                $('#videoOut').val(totalSeconds);
              
            }
      
      

            if(parseInt($('#videoIn').val()) < parseInt($('#videoOut').val()))
            {
                $(".start").prop("disabled",false);
            }
            else
            {
                $(".start").prop("disabled",true);
            }


        });
        $('#fileupload').click(function () {

            $('.color-container').show();
            $('#setIn').css("visibility", "visible");
            $('#setOut').css("visibility", "visible");
            $('.fileupload-buttonbar').css("display", "none");

        });
 
 



    $(function () {
        $( "#inSeconds" ).change(function() {
         
            var seconds = $("#inSeconds").val();
            var minutes = 0;
            var hours = 0;
            if(seconds < 3600 && seconds > 60)
            {
                minutes = seconds/60;
                seconds = seconds%60;
                minutes = Math.floor(minutes);
        
   
                $("#inSeconds").val(seconds);
                $("#inMinutes").val(minutes);
            }
            if(seconds >= 3600)
            {

        
                minutes = seconds/60;
                seconds = seconds%60;
                minutes = Math.floor(minutes);
        
                hours = minutes/60;
                minutes = minutes%60;
                hours = Math.floor(hours);
        
                $("#inSeconds").val(seconds);
                $("#inMinutes").val(minutes);
                $("#inHours").val(hours);
        
        
            }
        });

        $( "#outSeconds" ).change(function() {
           
            var seconds = $("#outSeconds").val();
            var minutes = 0;
            var hours = 0;
            if(seconds < 3600 && seconds > 60)
            {
                minutes = seconds/60;
                seconds = seconds%60;
                minutes = Math.floor(minutes);
        
   
                $("#outSeconds").val(seconds);
                $("#outMinutes").val(minutes);
            }
            if(seconds >= 3600)
            {

        
                minutes = seconds/60;
                seconds = seconds%60;
                minutes = Math.floor(minutes);
        
                hours = minutes/60;
                minutes = minutes%60;
                hours = Math.floor(hours);
        
                $("#outSeconds").val(seconds);
                $("#outMinutes").val(minutes);
                $("#outHours").val(hours);
        
        
            }
        });
 
      
    });

    $("#inHours, #inMinutes, #inSeconds, #outHours, #outMinutes #outSeconds").keydown(function (e) {
        // Allow: backspace, delete, tab, escape, enter and .
        if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
            // Allow: Ctrl+A
            (e.keyCode == 65 && e.ctrlKey === true) || 
            // Allow: home, end, left, right
            (e.keyCode >= 35 && e.keyCode <= 39)) {
            // let it happen, don't do anything
            return;
        }
        // Ensure that it is a number and stop the keypress
        if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
            e.preventDefault();
        }
    });
 

</script>
}
<style>
    .jumbotron {
      
        background-color: #e1e1e1;
    }
    .color-container {
        background-color: rgba(50, 50, 50, .9);
        height: 100%;
        border-radius: 10px;
        display: none;
        padding-bottom:60px;
        padding-top: 15px;
        margin-top: -35px;
    }
    .progress{
      

    }
.start
{
    position: relative;
    top:220px;
    left: 165px;
}
    .cancel {
   
        position: relative;
        top: 220px;
        left: 185px;
        visibility:hidden;
    }
    .size
    {
        display: none;
    }
    .name{
        display:none;
    }
    #secondsContainers{
     width: 75px;
    display:none;
    }
    .btn-primary {
        background-color: #357ebd;
    }
    .input-sm{
        padding: 5px 9px;
    }
</style>


<div class="jumbotron">
    <h1>Service for @Model.FirstName @Model.LastName</h1>
    <p>Camera split the files? Check out our @Html.ActionLink("Multi File Upload", "MultiUpload", new {id=Model.Id}, new { @class = "btn btn-default btn-xs" })</p>
    <p>File names can only contain letters, numbers, and underscores. All other characters are not allowed.</p>

</div>


<br />
<div class="row">

    <div id="filePlaceHolder" class="col-lg-6 col-lg-offset-3">
        <!-- The file upload form used as target for the file upload widget -->
        <form id="fileupload" method="POST" enctype="multipart/form-data">
            <!-- Redirect browsers with JavaScript disabled to the origin page -->
            <noscript><input type="hidden" name="redirect" value="http://www.midweststreams.com"></noscript>
            <!-- The fileupload-buttonbar contains buttons to add/delete files and start/cancel the upload -->
            <div class="row fileupload-buttonbar">
                <div class="col-lg-12" style="text-align:center;">
                    <!-- The fileinput-button span is used to style the file input field as button -->
                    <span class="btn btn-success fileinput-button">
                        <i class="fa fa-video-camera fa-fw"></i>
                        <span>Add funeral</span>
                        <input type="file" name="files[]" multiple>
                    </span>



                    <!-- The global file processing state -->
                    <span class="fileupload-process"></span>
                </div>
                <!-- The global progress state -->
                <div class="col-lg-5 fileupload-progress fade">
                    <!-- The global progress bar -->
                    <div class="progress progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100">
                        <div class="progress-bar progress-bar-success" style="width:0%;"></div>
                    </div>
                    <!-- The extended global progress state -->
                    <div class="progress-extended">&nbsp;</div>
                </div>
            </div>
            <!-- The table listing the files available for upload/download -->
            <div id="files" class="files col-lg-12"></div>
        </form>
    </div>
    <br>

</div>
<div class="container color-container">

    <div class="col-lg-6 col-lg-offset-3">
        <div class="panel panel-default">

            <div class="panel-body">

                <div class="step step-one well">

                    <div class="input-group col-lg-6">
                        <input type="text" class="form-control input-sm time-width" id="inHours" placeholder="H" />
                        <span class="input-group-btn" style="width:0px;"></span>
                        <input type="text" class="form-control input-sm time-width" id="inMinutes" placeholder="MM" />
                        <span class="input-group-btn" style="width:0px;"></span>
                        <input type="text" class="form-control input-sm time-width" id="inSeconds" placeholder="ss" />
                        <span class="input-group-btn" style="width:0px;"></span>

                        <span class="input-group-btn" style="width:0px;">
                            <button id="setIn" type="submit" class="btn btn-success  input-sm">Set Start</button>
                        </span>
                      
                    </div>
                    <div class="input-group col-lg-6">
                        
                        <input type="text" class="form-control input-sm time-width" id="outHours" placeholder="H" />
                        <span class="input-group-btn" style="width:0px;"></span>
                        <input type="text" class="form-control input-sm time-width" id="outMinutes" placeholder="MM" />
                        <span class="input-group-btn" style="width:0px;"></span>
                        <input type="text" class="form-control input-sm time-width" id="outSeconds" placeholder="ss" />
                        <span class="input-group-btn" style="width:0px;"></span>

                        <span class="input-group-btn" style="width:0px;">
                            <button id="setOut" type="submit" class="btn btn-danger  input-sm">Set End</button>
                        </span>
                    </div>
                    <div class="clearfix"></div>
                    <p>Play through the video and select the start and stop times of the service</p>
                    <p>Manually enter times <input type="checkbox" id="manualCheckBox" /></p>

                </div>

            </div>
        </div>
       
    </div>

    <div id="secondsContainers">
        <input type="text" id="videoIn" class="form-control " placeholder="0" />
        <input type="text" class="form-control" id="videoOut" placeholder="0" />
    </div>
</div>


</div>
     <!-- The template to display files available for upload -->
     <script id="template-upload" type="text/x-tmpl">
         {% for (var i=0, file; file=o.files[i]; i++) { %}
         <div class="template-upload fade">
             <div class="videoContainer">
                 <span class="preview"></span>
             </div>
             <div>
                 <p class="name">{%=file.name%}</p>
                 <strong class="error text-danger"></strong>
             </div>
             <div>
                 <p class="size">Processing...</p>
                 <div class="progress progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="0"><div class="progress-bar progress-bar-success" style="width:0%;"></div></div>
             </div>
             <div>
                 {% if (!i && !o.options.autoUpload) { %}
                 <button class="btn btn-primary start" disabled>
                     <i class="glyphicon glyphicon-upload"></i>
                     <span>Start</span>
                 </button>
                 {% } %}
                 {% if (!i) { %}
                 <button class="btn btn-warning cancel">
                     <i class="glyphicon glyphicon-ban-circle"></i>
                     <span>Cancel</span>
                 </button>
                 {% } %}
             </div>
         </div>
         {% } %}
     </script>
     <!-- The template to display files available for download -->
     <script id="template-download">

     </script>
</div>