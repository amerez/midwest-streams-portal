@model VideoManager.Models.SignUpViewModel
@{
    ViewBag.Title = "SignUp";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Sign Up</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-sm-6 col-md-6">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-sm-6 col-md-6">
            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-sm-6 col-md-6">
            @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ZipCode, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-sm-6 col-md-6">
            @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-sm-6 col-md-6">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-sm-6 col-md-6">
            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-sm-6 col-md-6">
            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
    </div>

    @Html.HiddenFor(model => model.Price)
    <div class="form-group">
        <label class="control-label col-md-2">Payment</label>
        <div class="col-sm-6 col-md-6">
            @if (ViewBag.IsCharged)
            {
                <label>You successfully paid <strong>$150.00</strong></label>
            }
            else
            {
                <script src="//checkout.stripe.com/v2/checkout.js"
                        class="stripe-button"
                        data-key="@ViewBag.StripePublishKey"
                        data-locale="auto"
                        data-description="Funeral Webcasting Plan"
                        data-amount="@Model.Price" ,
                        data-email="@Model.Email">
                </script>
            }

        </div>

    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.OwnerId, "OwnerId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-sm-6 col-md-6">
                @Html.DropDownListFor(model => model.OwnerId, new SelectList(ViewBag.OwnerList, "Id", "Name"), htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.OwnerId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PaymentStatus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-sm-6 col-md-6">
                @Html.EnumDropDownListFor(model => model.PaymentStatus, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PaymentStatus, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DevHome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-sm-1 col-md-1">
                @Html.CheckBoxFor(model => model.DevHome, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DevHome, "", new { @class = "text-danger" })
            </div>
        </div>*@
    @{
        if (ViewBag.IsCharged)
        {
            <div class="form-group">
                <div class="col-md-offset-2 col-md-2">
                    <input type="submit" value="Create Account" class="btn btn-lg btn-primary" />
                </div>
            </div>
        }
    }

</div>
}
<p class="text-danger">@ViewBag.ErrorText</p>
</script>
